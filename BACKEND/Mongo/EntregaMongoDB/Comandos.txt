- Para crear la base de datos

***
use ecommerce
***

- Para crear las colecciones

***
db.createCollection('productos')
db.createCollection('mensajes')
***

- 1 y 2) Para insertar las rows a productos

***
db.productos.insertMany([
    {
        "timestamp": ISODate(),
        "nombre": "Iphone 10",
        "precio": 1000,
        "url": "url1.com",
        "stock": 5
    },
    {
        "timestamp": ISODate(),
        "nombre": "Iphone 11",
        "precio": 2000,
        "url": "url2.com",
        "stock": 10
    },
    {
        "timestamp": ISODate(),
        "nombre": "Samsung Galaxy",
        "precio": 3000,
        "url": "url3.com",
        "stock": 15
    },
    {
        "timestamp": ISODate(),
        "nombre": "Joystick",
        "precio": 101,
        "url": "url4.com",
        "stock": 20
    },
    {
        "timestamp": ISODate(),
        "nombre": "Auriculares",
        "precio": 200,
        "url": "url5.com",
        "stock": 25
    },
    {
        "timestamp": ISODate(),
        "nombre": "Monitor",
        "precio": 2360,
        "url": "url6.com",
        "stock": 30
    },
    {
        "timestamp": ISODate(),
        "nombre": "Cafetera",
        "precio": 570,
        "url": "url7.com",
        "stock": 35
    },
    {
        "timestamp": ISODate(),
        "nombre": "Lavarropas",
        "precio": 3000,
        "url": "url8.com",
        "stock": 40
    },
    {
        "timestamp": ISODate(),
        "nombre": "Heladera",
        "precio": 3450,
        "url": "url9.com",
        "stock": 45
    },
    {
        "timestamp": ISODate(),
        "nombre": "Notebook Gamer",
        "precio": 4999,
        "url": "url10.com",
        "stock": 50
    }
])
***

- Insertar mensajes

***
db.mensajes.insertMany([
	{
		"timestamp": ISODate()},
		"usuario": "NombreUsuario",
		"mensaje": "MensajeUsuario"
		}
])
***

- 3) Listar todos los documentos de productos y mensajes

***
db.productos.find()
db.mensajes.find()
***

- 4) Contar la cantidad de documentos en productos y mensajes

***
db.productos.countDocuments()
db.mensajes.countDocuments()
***
- 5)
- a) Agregar otro producto más en la coleccion productos

***
db.productos.insertOne({
        "timestamp": ISODate(),
        "nombre": "Producto 11",
        "precio": 1234,
        "url": "url11.com",
        "stock": 60
    })
***
- b)
- Devolver el producto cuyo nombre sea Monitor

***
db.productos.find({nombre: "Monitor"}
***

- i) Listar productos con precio menor a 1000 pesos:

***
db.productos.find({price: {$lt: 1000}})
***

- ii) Listar los productos con precio entre los 1000 a 3000 pesos.

***
db.productos(find {price: {$gt: 1000, $lt: 3000 })
***

- iii) Listar los productos con precio mayor a 3000 pesos.

***
db.productos.find({price: {$gt: 3000}})
***


- iv) Realizar una consulta que traiga sólo el nombre del tercer producto más barato.

***
db.productos.find({},{title:1, _id:0}).sort({price:1}).skip(2).limit(1)
***


- c) Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.

***
db.productos.updateMany({}, {$inc: {stock: 100}})
***


- d) Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 

***
db.productos.updateMany({price: {$gt: 4000}}, {$set: {stock: 0}})
***


- e) Borrar los productos con precio menor a 1000 pesos

***
db.productos.deleteMany({price: {$lt: 1000}})
***


- 6) Creación del usuario **pepe**, con contraseña: **asd456** que solo pueda leer la base de datos ecomerce
  
***
db.createUser({user: "pepe", pwd: "asd456", roles: [{role: "read", db: "ecommerce"}]})
***

- Verificar que no pueda cambiar la informacion

***
mongo -u pepe -p --authenticationDatabase ecommerce 
***

***
> use ecommerce
switched to db ecommerce
> db.productos.insertOne({nombre: "NombreProd"})
uncaught exception: WriteCommandError({
	"ok" : 0,
	"errmsg" : "not authorized on ecommerce to execute command { insert: \"productos\", ordered: true, lsid: { id: UUID(\"0472ecf7-1bf2-47c1-8616-00278992617c\") }, $db: \"ecommerce\" }",
	"code" : 13,
	"codeName" : "Unauthorized"
})
***

